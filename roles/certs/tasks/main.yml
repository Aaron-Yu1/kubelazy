---
# tasks file for certs
- name: get certs directory info
  stat: 
    path: certs/
  register: d

- name: Creste a dir for certs directory if it doesn't exist
  file:
    path: certs
    state: directory
  when: "d.stat.isreg is not defined"

# Create cert for CA
- name: get ca info
  stat:
    path: certs/ca.pem
  register: p

- name: Copy cert request file
  template: 
    src: "{{ item }}.j2" 
    dest: certs/{{ item }}
  with_items:
    - ca-config.json
    - ca-csr.json
  when: "p.stat.isreg is not defined"

- name: Create CA key
  shell: "cd certs/ && ../bin/cfssl gencert \
                       -initca ca-csr.json | ../bin/cfssljson -bare ca" 
  when: "p.stat.isreg is not defined"

# Create cert for etcd
- name: Get etcd cert info
  stat:
    path: certs/etcd.pem
  register: e

- import_tasks: etcd.yml
  when: "e.stat.isreg is not defined"

# Create cert for kube-apiserver
- name: Get kubernetes cert info
  stat:
    path: certs/apiserver.pem
  register: api

- import_tasks: kube-apiserver.yml
  when: "api.stat.isreg is not defined"

# Create configure file: kubectl.kubeconfig
- name: Get kubectl-kubeconfig info
  stat:
    path: certs/kubectl.kubeconfig
  register: kubectl

- import_tasks: kubectl-kubeconfig.yml
  when: "kubectl.stat.isreg is not defined"

# Create configure file: kube-controller-manager.kubeconfig
- name: Get kube-controller-manager.kubeconfig info
  stat:
    path: certs/kube-controller-manager.kubeconfig
  register: kcm

- import_tasks: kube-controller-manager.kubeconfig.yml
  when: "kcm.stat.isreg is not defined"

# Create configure file: kube-scheduler.kubeconfig
- name: Get kube-scheduler.kubeconfig info
  stat:
    path: certs/kube-scheduler.kubeconfig
  register: ks

- import_tasks: kube-scheduler.kubeconfig.yml
  when: "ks.stat.isreg is not defined"

# Create configure file: kube-proxy.kubeconfig
- name: Get kube-scheduler.kubeconfig info
  stat:
    path: certs/kube-proxy.kubeconfig
  register: kp
  
- import_tasks: kube-proxy.kubeconfig.yml
  when: "kp.stat.isreg is not defined"
